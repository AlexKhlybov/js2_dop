// Сколько раз выведется "привет"?
// Ваш ответ
// 3


// Какой тип значения вернет следующая функция:
// Ваш ответ
// number

// Какое значение будет в переменной result?
// Ваш ответ
// 12

// Как отсортировать массив объектов?
// Ваш ответ
// Вызывается метод sort, в который передается имя свойства для сортировки

// Как добавить стиль background-color для найденного элемента?
// Ваш ответ
// style['background-color'] = value

// Как получить весь текст в найденном элементе?
// Ваш ответ
// text

// Какое сравнение двух дат правильное?
// Ваш ответ
// Сделать полное сравнение по составляющим дат (getFullYear(), getMonth(), getDate() и т.д.)

// Ваш ответ
// date1 < date2


// const a = /abc/;

// typeof a = ?
 
// Ваш ответ
// "RegExp"


// Как получить последний день месяца переданной даты?
// Ваш ответ
// new Date(date.getFullYear(),date.getMonth(),31)

// Какое утверждение верное?
// Ваш ответ
// Метод map действует аналогично циклу по массиву, может изменить элементы массива
// 


// Как задать 1 января 2019 года?
// Ваш ответ
// new Date(2019,1,1)
// Чему равно выражение:
// Ваш ответ
// NaN
// Какое значение будет в переменной result?
// Ваш ответ
// 5
// В тест-фреймворке Jasmine...

// Ваш ответ
// В методе describe можно использовать it

// Что выведет в консоли следующий код:

// Ваш ответ
// 6

// Какой тип значения вернет следующая функция:
// Ваш ответ
// number
// Какие методы передачи данных используются при запросах?
// Ваш ответ
// GET, POST, PUT, DELETE
// Что выведет в консоли следующий код:
// Ваш ответ
// 403, т. к. не указан метод запроса
// Сколько раз выведется "привет"?
// Ваш ответ
// 3
// Часто встречается такая конструкция:

// promise.then(code 1).then(code 2).catch(code 3)

// Какие могут быть последовательности исполнения кода?

// Ваш ответ
// code 1, затем code 2
// Какое сравнение двух дат правильное?

// Ваш ответ
// date1.getTime() < date2.getTime()

// Ваш ответ
// date1.equal(date2)


// Какой формат передачи данных предусмотрен между клиентом и сервером?
// Ваш ответ
// XML или JSON
// Что означает запись const {name, age, job} = person ?
// Ваш ответ
// Это деструктуризация, но предварительно надо обязательно проверить, что person — это объект
// Какое сравнение двух дат правильное?

// Ваш ответ
// date1 < date2

// Ваш ответ
// date1.equal(date2)

// Что выведет в консоли следующий код:
// Ваш ответ
// 200, т. к. запрос пройдет
// Как задать 1 января 2019 года?
// Ваш ответ
// new Date(2019,1,1,0,0,0)
// Как получить новый массив, удалив из старого массива (array) элемент с индексом 5?
// Ваш ответ
// array.map((el,ind) => ind !== 5)
// Какое объявление переменной правильное?
// Ваш ответ
// let from = 1;
// Ваш ответ
// let required = 1;
// JSON.parse(JSON.stringify(object)) вернет
// Ваш ответ
// Представление объекта в виде строки
// Как будет выглядеть стрелочный аналог функции:
// Ваш ответ
// () => {

// return arguments[0] + arguments[1];

// }


const a = [1, 2, 3, 4, 5, 6, 7, 8];


console.log(a.forEach((el, ind) => {el += 1}));

